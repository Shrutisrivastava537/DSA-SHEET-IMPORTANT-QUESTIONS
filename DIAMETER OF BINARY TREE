#include<iostream>
#include<bits/stdc++.h>
using namespace std;

struct Node
{
    Node *lchild;
    int data;
    Node *rchild;
}*root=NULL;

// Creating a Binary Tree

void treecreate()
{
    Node *t,*p;
    int x;
    
    queue<Node *> q;
    cout<<"ENTER THE ROOT VALUE :";
    cin>>x;
    
    root=new Node;
    root->data=x;
    root->lchild=root->rchild=NULL;
    q.push(root);
    
    while(!q.empty())
    {
        p=q.front();
        q.pop();
        
        cout<<"ENTER LEFT CHILD 0F "<<p->data<<" : ";
        cin>>x;
        
        if(x!=-1)
        {
            t=new Node;
            t->data=x;
            t->lchild=t->rchild=NULL;
            p->lchild=t;
            q.push(t);
        }
        
        cout<<"ENTER RIGHT CHILD OF "<<p->data<<" : ";
        cin>>x;
        
        if(x!=-1)
        {
            t=new Node;
            t->data=x;
            t->lchild=t->rchild=NULL;
            p->rchild=t;
            q.push(t);
        }
    }
}

int maximum;

int fun(Node *root)
{
    if(!root) return 0;
    
    int x = fun(root->lchild);
    int y = fun(root->rchild);
    
    maximum = max(maximum , x+y+1);
    return (max(x,y)+1);
}

int diameter(Node *root)
{
    maximum = INT_MIN;
    int x = fun(root);
    
    return maximum;
}


// MAIN FUNCTION 

int main()
{
    treecreate();
    cout<<endl;
    
    int s = diameter(root);
    
    cout<<s<<" ";
    
    return 0;
}
